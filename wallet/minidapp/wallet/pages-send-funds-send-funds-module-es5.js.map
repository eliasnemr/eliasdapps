{"version":3,"sources":["./node_modules/qr-scanner/src/qr-scanner.js","./src/app/pages/send-funds/send-funds.page.html","./src/app/pages/send-funds/send-funds.module.ts","./src/app/pages/send-funds/send-funds.page.scss","./src/app/pages/send-funds/send-funds.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,sCAAsC;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC,uBAAuB;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;AACA,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT,oBAAoB;AACpB,SAAS,IAAI;;AAEb;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,eAAe;AAChE,8CAA8C;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"pages-send-funds-send-funds-module-es5.js","sourcesContent":["export default class QrScanner {\n    /* async */\n    static hasCamera() {\n        if (!navigator.mediaDevices) return Promise.resolve(false);\n        // note that enumerateDevices can always be called and does not prompt the user for permission. However, device\n        // labels are only readable if served via https and an active media stream exists or permanent permission is\n        // given. That doesn't matter for us though as we don't require labels.\n        return navigator.mediaDevices.enumerateDevices()\n            .then(devices => devices.some(device => device.kind === 'videoinput'))\n            .catch(() => false);\n    }\n\n    constructor(\n        video,\n        onDecode,\n        canvasSizeOrOnDecodeError = this._onDecodeError.bind(this),\n        canvasSize = QrScanner.DEFAULT_CANVAS_SIZE,\n        preferredFacingMode = 'environment'\n    ) {\n        this.$video = video;\n        this.$canvas = document.createElement('canvas');\n        this._onDecode = onDecode;\n        this._preferredFacingMode = preferredFacingMode;\n        this._active = false;\n        this._paused = false;\n        this._flashOn = false;\n\n        if (typeof canvasSizeOrOnDecodeError === 'number') {\n            // legacy function signature where canvas size is the third argument\n            canvasSize = canvasSizeOrOnDecodeError;\n            console.warn('You\\'re using a deprecated version of the QrScanner constructor which will be removed in '\n                + 'the future');\n        } else {\n            this._onDecodeError = canvasSizeOrOnDecodeError;\n        }\n\n        this.$canvas.width = canvasSize;\n        this.$canvas.height = canvasSize;\n        this._sourceRect = {\n            x: 0,\n            y: 0,\n            width: canvasSize,\n            height: canvasSize\n        };\n\n        this._updateSourceRect = this._updateSourceRect.bind(this);\n        this._onPlay = this._onPlay.bind(this);\n        this._onVisibilityChange = this._onVisibilityChange.bind(this);\n\n        // Allow inline playback on iPhone instead of requiring full screen playback,\n        // see https://webkit.org/blog/6784/new-video-policies-for-ios/\n        this.$video.playsInline = true;\n        // Allow play() on iPhone without requiring a user gesture. Should not really be needed as camera stream\n        // includes no audio, but just to be safe.\n        this.$video.muted = true;\n        this.$video.disablePictureInPicture = true;\n        this.$video.addEventListener('loadedmetadata', this._updateSourceRect);\n        this.$video.addEventListener('play', this._onPlay);\n        document.addEventListener('visibilitychange', this._onVisibilityChange);\n\n        this._qrEnginePromise = QrScanner.createQrEngine();\n    }\n\n    /* async */\n    hasFlash() {\n        if (!('ImageCapture' in window)) {\n            return Promise.resolve(false);\n        }\n\n        const track = this.$video.srcObject ? this.$video.srcObject.getVideoTracks()[0] : null;\n        if (!track) {\n            return Promise.reject('Camera not started or not available');\n        }\n\n        const imageCapture = new ImageCapture(track);\n        return imageCapture.getPhotoCapabilities()\n            .then((result) => {\n                return result.fillLightMode.includes('flash');\n            })\n            .catch((error) => {\n                console.warn(error);\n                return false;\n            });\n    }\n\n    isFlashOn() {\n      return this._flashOn;\n    }\n\n    /* async */\n    toggleFlash() {\n      return this._setFlash(!this._flashOn);\n    }\n\n    /* async */\n    turnFlashOff() {\n      return this._setFlash(false);\n    }\n\n    /* async */\n    turnFlashOn() {\n      return this._setFlash(true);\n    }\n\n    destroy() {\n        this.$video.removeEventListener('loadedmetadata', this._updateSourceRect);\n        this.$video.removeEventListener('play', this._onPlay);\n        document.removeEventListener('visibilitychange', this._onVisibilityChange);\n\n        this.stop();\n        QrScanner._postWorkerMessage(this._qrEnginePromise, 'close');\n    }\n\n    /* async */\n    start() {\n        if (this._active && !this._paused) {\n            return Promise.resolve();\n        }\n        if (window.location.protocol !== 'https:') {\n            // warn but try starting the camera anyways\n            console.warn('The camera stream is only accessible if the page is transferred via https.');\n        }\n        this._active = true;\n        this._paused = false;\n        if (document.hidden) {\n            // camera will be started as soon as tab is in foreground\n            return Promise.resolve();\n        }\n        clearTimeout(this._offTimeout);\n        this._offTimeout = null;\n        if (this.$video.srcObject) {\n            // camera stream already/still set\n            this.$video.play();\n            return Promise.resolve();\n        }\n\n        let facingMode = this._preferredFacingMode;\n        return this._getCameraStream(facingMode, true)\n            .catch(() => {\n                // We (probably) don't have a camera of the requested facing mode\n                facingMode = facingMode === 'environment' ? 'user' : 'environment';\n                return this._getCameraStream(); // throws if camera is not accessible (e.g. due to not https)\n            })\n            .then(stream => {\n                // Try to determine the facing mode from the stream, otherwise use our guess. Note that the guess is not\n                // always accurate as Safari returns cameras of different facing mode, even for exact constraints.\n                facingMode = this._getFacingMode(stream) || facingMode;\n                this.$video.srcObject = stream;\n                this.$video.play();\n                this._setVideoMirror(facingMode);\n            })\n            .catch(e => {\n                this._active = false;\n                throw e;\n            });\n    }\n\n    stop() {\n        this.pause();\n        this._active = false;\n    }\n\n    pause() {\n        this._paused = true;\n        if (!this._active) {\n            return;\n        }\n        this.$video.pause();\n        if (this._offTimeout) {\n            return;\n        }\n        this._offTimeout = setTimeout(() => {\n            const tracks = this.$video.srcObject ? this.$video.srcObject.getTracks() : [];\n            for (const track of tracks) {\n                track.stop(); //  note that this will also automatically turn the flashlight off\n            }\n            this.$video.srcObject = null;\n            this._offTimeout = null;\n        }, 300);\n    }\n\n    /* async */\n    static scanImage(imageOrFileOrUrl, sourceRect=null, qrEngine=null, canvas=null, fixedCanvasSize=false,\n                     alsoTryWithoutSourceRect=false) {\n        const gotExternalWorker = qrEngine instanceof Worker;\n\n        let promise = Promise.all([\n            qrEngine || QrScanner.createQrEngine(),\n            QrScanner._loadImage(imageOrFileOrUrl),\n        ]).then(([engine, image]) => {\n            qrEngine = engine;\n            let canvasContext;\n            [canvas, canvasContext] = this._drawToCanvas(image, sourceRect, canvas, fixedCanvasSize);\n\n            if (qrEngine instanceof Worker) {\n                if (!gotExternalWorker) {\n                    // Enable scanning of inverted color qr codes. Not using _postWorkerMessage as it's async\n                    qrEngine.postMessage({ type: 'inversionMode', data: 'both' });\n                }\n                return new Promise((resolve, reject) => {\n                    let timeout, onMessage, onError;\n                    onMessage = event => {\n                        if (event.data.type !== 'qrResult') {\n                            return;\n                        }\n                        qrEngine.removeEventListener('message', onMessage);\n                        qrEngine.removeEventListener('error', onError);\n                        clearTimeout(timeout);\n                        if (event.data.data !== null) {\n                            resolve(event.data.data);\n                        } else {\n                            reject(QrScanner.NO_QR_CODE_FOUND);\n                        }\n                    };\n                    onError = (e) => {\n                        qrEngine.removeEventListener('message', onMessage);\n                        qrEngine.removeEventListener('error', onError);\n                        clearTimeout(timeout);\n                        const errorMessage = !e ? 'Unknown Error' : (e.message || e);\n                        reject('Scanner error: ' + errorMessage);\n                    };\n                    qrEngine.addEventListener('message', onMessage);\n                    qrEngine.addEventListener('error', onError);\n                    timeout = setTimeout(() => onError('timeout'), 10000);\n                    const imageData = canvasContext.getImageData(0, 0, canvas.width, canvas.height);\n                    qrEngine.postMessage({\n                        type: 'decode',\n                        data: imageData\n                    }, [imageData.data.buffer]);\n                });\n            } else {\n                return new Promise((resolve, reject) => {\n                    const timeout = setTimeout(() => reject('Scanner error: timeout'), 10000);\n                    qrEngine.detect(canvas).then(scanResults => {\n                        if (!scanResults.length) {\n                            reject(QrScanner.NO_QR_CODE_FOUND);\n                        } else {\n                            resolve(scanResults[0].rawValue);\n                        }\n                    }).catch((e) => reject('Scanner error: ' + (e.message || e))).finally(() => clearTimeout(timeout));\n                });\n            }\n        });\n\n        if (sourceRect && alsoTryWithoutSourceRect) {\n            promise = promise.catch(() => QrScanner.scanImage(imageOrFileOrUrl, null, qrEngine, canvas, fixedCanvasSize));\n        }\n\n        promise = promise.finally(() => {\n            if (gotExternalWorker) return;\n            QrScanner._postWorkerMessage(qrEngine, 'close');\n        });\n\n        return promise;\n    }\n\n    setGrayscaleWeights(red, green, blue, useIntegerApproximation = true) {\n        // Note that for the native BarcodeDecoder, this is a no-op. However, the native implementations work also\n        // well with colored qr codes.\n        QrScanner._postWorkerMessage(\n            this._qrEnginePromise,\n            'grayscaleWeights',\n            { red, green, blue, useIntegerApproximation }\n        );\n    }\n\n    setInversionMode(inversionMode) {\n        // Note that for the native BarcodeDecoder, this is a no-op. However, the native implementations scan normal\n        // and inverted qr codes by default\n        QrScanner._postWorkerMessage(this._qrEnginePromise, 'inversionMode', inversionMode);\n    }\n\n    /* async */\n    static createQrEngine(workerPath = QrScanner.WORKER_PATH) {\n        return ('BarcodeDetector' in window ? BarcodeDetector.getSupportedFormats() : Promise.resolve([]))\n            .then((supportedFormats) => supportedFormats.indexOf('qr_code') !== -1\n                ? new BarcodeDetector({ formats: ['qr_code'] })\n                : new Worker(workerPath)\n            );\n    }\n\n    _onPlay() {\n        this._updateSourceRect();\n        this._scanFrame();\n    }\n\n    _onVisibilityChange() {\n        if (document.hidden) {\n            this.pause();\n        } else if (this._active) {\n            this.start();\n        }\n    }\n\n    _updateSourceRect() {\n        const smallestDimension = Math.min(this.$video.videoWidth, this.$video.videoHeight);\n        const sourceRectSize = Math.round(2 / 3 * smallestDimension);\n        this._sourceRect.width = this._sourceRect.height = sourceRectSize;\n        this._sourceRect.x = (this.$video.videoWidth - sourceRectSize) / 2;\n        this._sourceRect.y = (this.$video.videoHeight - sourceRectSize) / 2;\n    }\n\n    _scanFrame() {\n        if (!this._active || this.$video.paused || this.$video.ended) return false;\n        // using requestAnimationFrame to avoid scanning if tab is in background\n        requestAnimationFrame(() => {\n            if (this.$video.readyState <= 1) {\n                // Skip scans until the video is ready as drawImage() only works correctly on a video with readyState\n                // > 1, see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage#Notes.\n                // This also avoids false positives for videos paused after a successful scan which remains visible on\n                // the canvas until the video is started again and ready.\n                this._scanFrame();\n                return;\n            }\n            this._qrEnginePromise\n                .then((qrEngine) => QrScanner.scanImage(this.$video, this._sourceRect, qrEngine, this.$canvas, true))\n                .then(this._onDecode, (error) => {\n                    if (!this._active) return;\n                    const errorMessage = error.message || error;\n                    if (errorMessage.indexOf('service unavailable') !== -1) {\n                        // When the native BarcodeDetector crashed, create a new one\n                        this._qrEnginePromise = QrScanner.createQrEngine();\n                    }\n                    this._onDecodeError(error);\n                })\n                .then(() => this._scanFrame());\n        });\n    }\n\n    _onDecodeError(error) {\n        // default error handler; can be overwritten in the constructor\n        if (error === QrScanner.NO_QR_CODE_FOUND) return;\n        console.log(error);\n    }\n\n    _getCameraStream(facingMode, exact = false) {\n        const constraintsToTry = [{\n            width: { min: 1024 }\n        }, {\n            width: { min: 768 }\n        }, {}];\n\n        if (facingMode) {\n            if (exact) {\n                facingMode = { exact: facingMode };\n            }\n            constraintsToTry.forEach(constraint => constraint.facingMode = facingMode);\n        }\n        return this._getMatchingCameraStream(constraintsToTry);\n    }\n\n    _getMatchingCameraStream(constraintsToTry) {\n        if (!navigator.mediaDevices || constraintsToTry.length === 0) {\n            return Promise.reject('Camera not found.');\n        }\n        return navigator.mediaDevices.getUserMedia({\n            video: constraintsToTry.shift()\n        }).catch(() => this._getMatchingCameraStream(constraintsToTry));\n    }\n\n    /* async */\n    _setFlash(on) {\n        return this.hasFlash().then((hasFlash) => {\n            if (!hasFlash) return Promise.reject('No flash available');\n            // Note that the video track is guaranteed to exist at this point\n            return this.$video.srcObject.getVideoTracks()[0].applyConstraints({\n                advanced: [{ torch: on }],\n            });\n        }).then(() => this._flashOn = on);\n    }\n\n    _setVideoMirror(facingMode) {\n        // in user facing mode mirror the video to make it easier for the user to position the QR code\n        const scaleFactor = facingMode==='user'? -1 : 1;\n        this.$video.style.transform = 'scaleX(' + scaleFactor + ')';\n    }\n\n    _getFacingMode(videoStream) {\n        const videoTrack = videoStream.getVideoTracks()[0];\n        if (!videoTrack) return null; // unknown\n        // inspired by https://github.com/JodusNodus/react-qr-reader/blob/master/src/getDeviceId.js#L13\n        return /rear|back|environment/i.test(videoTrack.label)\n            ? 'environment'\n            : /front|user|face/i.test(videoTrack.label)\n                ? 'user'\n                : null; // unknown\n    }\n\n    static _drawToCanvas(image, sourceRect=null, canvas=null, fixedCanvasSize=false) {\n        canvas = canvas || document.createElement('canvas');\n        const sourceRectX = sourceRect && sourceRect.x? sourceRect.x : 0;\n        const sourceRectY = sourceRect && sourceRect.y? sourceRect.y : 0;\n        const sourceRectWidth = sourceRect && sourceRect.width? sourceRect.width : image.width || image.videoWidth;\n        const sourceRectHeight = sourceRect && sourceRect.height? sourceRect.height : image.height || image.videoHeight;\n        if (!fixedCanvasSize && (canvas.width !== sourceRectWidth || canvas.height !== sourceRectHeight)) {\n            canvas.width = sourceRectWidth;\n            canvas.height = sourceRectHeight;\n        }\n        const context = canvas.getContext('2d', { alpha: false });\n        context.imageSmoothingEnabled = false; // gives less blurry images\n        context.drawImage(image, sourceRectX, sourceRectY, sourceRectWidth, sourceRectHeight, 0, 0, canvas.width, canvas.height);\n        return [canvas, context];\n    }\n\n    /* async */\n    static _loadImage(imageOrFileOrBlobOrUrl) {\n        if (imageOrFileOrBlobOrUrl instanceof HTMLCanvasElement || imageOrFileOrBlobOrUrl instanceof HTMLVideoElement\n            || window.ImageBitmap && imageOrFileOrBlobOrUrl instanceof window.ImageBitmap\n            || window.OffscreenCanvas && imageOrFileOrBlobOrUrl instanceof window.OffscreenCanvas) {\n            return Promise.resolve(imageOrFileOrBlobOrUrl);\n        } else if (imageOrFileOrBlobOrUrl instanceof Image) {\n            return QrScanner._awaitImageLoad(imageOrFileOrBlobOrUrl).then(() => imageOrFileOrBlobOrUrl);\n        } else if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob\n            || imageOrFileOrBlobOrUrl instanceof URL || typeof(imageOrFileOrBlobOrUrl)==='string') {\n            const image = new Image();\n            if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob) {\n                image.src = URL.createObjectURL(imageOrFileOrBlobOrUrl);\n            } else {\n                image.src = imageOrFileOrBlobOrUrl;\n            }\n            return QrScanner._awaitImageLoad(image).then(() => {\n                if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob) {\n                    URL.revokeObjectURL(image.src);\n                }\n                return image;\n            });\n        } else {\n            return Promise.reject('Unsupported image type.');\n        }\n    }\n\n    /* async */\n    static _awaitImageLoad(image) {\n        return new Promise((resolve, reject) => {\n            if (image.complete && image.naturalWidth!==0) {\n                // already loaded\n                resolve();\n            } else {\n                let onLoad, onError;\n                onLoad = () => {\n                    image.removeEventListener('load', onLoad);\n                    image.removeEventListener('error', onError);\n                    resolve();\n                };\n                onError = () => {\n                    image.removeEventListener('load', onLoad);\n                    image.removeEventListener('error', onError);\n                    reject('Image load error');\n                };\n                image.addEventListener('load', onLoad);\n                image.addEventListener('error', onError);\n            }\n        });\n    }\n\n    /* async */\n    static _postWorkerMessage(qrEngineOrQrEnginePromise, type, data) {\n        return Promise.resolve(qrEngineOrQrEnginePromise).then((qrEngine) => {\n            if (!(qrEngine instanceof Worker)) return;\n            qrEngine.postMessage({ type, data });\n        });\n    }\n}\nQrScanner.DEFAULT_CANVAS_SIZE = 400;\nQrScanner.NO_QR_CODE_FOUND = 'No QR code found';\nQrScanner.WORKER_PATH = 'qr-scanner-worker.min.js';\n","module.exports = \"<ion-app>\\r\\n<ion-header class=\\\"ion-no-border\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button class=\\\"menu-icon\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Send\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content *ngIf=\\\"isCameraOpen==false\\\">\\r\\n\\r\\n  <ion-grid *ngIf=\\\"tokenArr.length == 0\\\">\\r\\n    <ion-row>\\r\\n      <ion-col style=\\\"display: flex; align-items:center; justify-content:center\\\" size=\\\"12\\\">\\r\\n        <ion-label>Fetching tokens...</ion-label>\\r\\n      </ion-col>\\r\\n      <ion-col style=\\\"display: flex; align-items:center; justify-content:center\\\" size=\\\"12\\\">\\r\\n        <ion-spinner name=\\\"crescent\\\"></ion-spinner>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n  <ion-card class=\\\"webscan-canvas\\\" *ngIf=\\\"!checkPlatform() && isWebCameraOpen\\\">\\r\\n    <ion-card-header class=\\\"medium-text\\\">\\r\\n    Scan Your Minima QR address now...\\r\\n    <ion-progress-bar type=\\\"indeterminate\\\" reversed=\\\"true\\\"></ion-progress-bar>\\r\\n    </ion-card-header>\\r\\n    <video height=\\\"240\\\" #videoElem></video>\\r\\n    <hr>\\r\\n    <ion-button block=\\\"full\\\" (click)=\\\"stopWebScanQR()\\\">Stop Scanning</ion-button>\\r\\n    <hr>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-card class=\\\"borders\\\" *ngIf=\\\"!isWebCameraOpen && tokenArr.length > 0\\\">\\r\\n    <ion-card-header>\\r\\n      Post A Transaction\\r\\n      <ion-card-title>\\r\\n          <ion-icon style=\\\" font-size:1.2rem;\\\" slot=\\\"start\\\" name=\\\"send\\\" class=\\\"icon-head medium-text\\\" ></ion-icon>\\r\\n      </ion-card-title>\\r\\n    </ion-card-header>\\r\\n\\r\\n    <ion-card-content>\\r\\n      <form [formGroup]=\\\"sendForm\\\" id=\\\"sendForm\\\" (ngSubmit)=\\\"sendFunds()\\\">\\r\\n        <ion-list lines=\\\"none\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"fixed\\\" class=\\\"medium-text\\\">Token</ion-label>\\r\\n            <ion-select\\r\\n              placeholder=\\\"Select A Token\\\"\\r\\n              formControlName=\\\"tokenid\\\"    \\r\\n              interface = 'alert'\\r\\n              [(ngModel)]='itemSelected'\\r\\n              class=\\\"medium-text input\\\"\\r\\n              (ionChange)=\\\"onItemSelection($event)\\\"> \\r\\n            <ion-select-option *ngFor=\\\"let token of tokenArr;\\\"  [value]=\\\"token.tokenid\\\" class=\\\"token-option\\\">\\r\\n              {{ token.token + \\\"&mdash;\\\"+ token.tokenid }}\\r\\n            </ion-select-option>\\r\\n          </ion-select>\\r\\n          </ion-item>\\r\\n          <ion-item lines=\\\"none\\\">\\r\\n            <ion-label class=\\\"medium-text\\\" position=\\\"fixed\\\">Address</ion-label>\\r\\n            <span (click)=\\\"webScanQR()\\\" id=\\\"qrIcon\\\"> <ion-icon alt=\\\"qrCode\\\" src=\\\"assets/scan-outline.svg\\\"></ion-icon></span>\\r\\n            <ion-input #address class=\\\"medium-text input\\\" formControlName=\\\"address\\\" clearInput=\\\"true\\\" placeholder=\\\"address\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item class=\\\"error\\\" lines=\\\"none\\\" *ngIf=\\\"addressFormItem.invalid && addressFormItem.touched\\\">\\r\\n            <ion-label position=\\\"fixed\\\"></ion-label>\\r\\n            <ion-note class=\\\"error-message\\\">\\r\\n              <ion-icon name=\\\"alert-circle\\\"></ion-icon> <span> Invalid address format!</span> <br>\\r\\n              <span>&mdash; An address must begin with 0x or Mx.</span> \\r\\n            </ion-note>\\r\\n          </ion-item>\\r\\n          <ion-item lines=\\\"none\\\">\\r\\n            <ion-label class=\\\"medium-text\\\" position=\\\"fixed\\\">Amount</ion-label>\\r\\n            <ion-input #amount type=\\\"number\\\" formControlName=\\\"amount\\\" class=\\\"input medium-text\\\" placeholder=\\\"amount\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item class=\\\"error\\\" lines=\\\"none\\\" *ngIf=\\\"amountFormItem.invalid && amountFormItem.touched\\\">\\r\\n            <ion-label position=\\\"fixed\\\"></ion-label>\\r\\n            <ion-note class=\\\"error-message\\\">\\r\\n              <ion-icon name=\\\"alert-circle\\\"></ion-icon> <span> Amount required!</span> <br>\\r\\n              <span>&mdash; Amount has to be numeric and greater than 0.</span> \\r\\n            </ion-note>\\r\\n          </ion-item>\\r\\n          <ion-row id=\\\"quickAmount\\\">\\r\\n            <ion-col size=\\\"3\\\">\\r\\n\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"9\\\" style=\\\"padding-right:2.5%\\\">\\r\\n              <ion-button class=\\\"medium-text\\\" (click)=\\\"fillAmount('max')\\\" size=\\\"small\\\" fill=\\\"outline\\\">Send Max</ion-button>\\r\\n              <ion-button class=\\\"medium-text\\\" (click)=\\\"fillAmount('half')\\\" size=\\\"small\\\" fill=\\\"outline\\\">Send 1/2</ion-button>\\r\\n              <ion-button class=\\\"medium-text\\\" (click)=\\\"fillAmount('quarter')\\\" size=\\\"small\\\" fill=\\\"outline\\\">Send 1/4</ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-item lines=\\\"none\\\">\\r\\n            <!-- Disabled Checkbox -->\\r\\n            <ion-checkbox (click)=\\\"useMessage()\\\"></ion-checkbox>\\r\\n            <ion-label class=\\\"medium-text\\\" [hidden]=\\\"messageToggle\\\" style=\\\"padding-left: 10px;\\\">Message</ion-label>\\r\\n            <ion-label class=\\\"medium-text\\\" [hidden]=\\\"!messageToggle\\\" style=\\\"padding-left: 10px;\\\">This message is public</ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item [hidden]=\\\"!messageToggle\\\" lines=\\\"none\\\">\\r\\n                <ion-textarea \\r\\n                [(ngModel)]=\\\"data.message\\\"\\r\\n                formControlName=\\\"message\\\"\\r\\n                class=\\\"medium-text input\\\"\\r\\n                auto-grow=\\\"false\\\"\\r\\n                #message \\r\\n                placeholder=\\\"type your message...\\\"\\r\\n                maxlength=\\\"255\\\">\\r\\n                </ion-textarea>\\r\\n            </ion-item>\\r\\n            <ion-note *ngIf=\\\"data.message\\\" class=\\\"length\\\">{{ data.message.length +\\\"/255\\\" }}</ion-note>\\r\\n        </ion-list>\\r\\n      </form>\\r\\n        \\r\\n        \\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n<ion-footer>\\r\\n  <ion-toolbar class=\\\"border-t\\\">\\r\\n    <ion-buttons> \\r\\n      <ion-button type=\\\"button\\\" class=\\\"action-btn medium-text\\\" expand=\\\"block\\\" (click)=\\\"stopCamera()\\\"  *ngIf=\\\"isCameraOpen==true\\\">\\r\\n        Stop scanning\\r\\n       </ion-button>\\r\\n      <ion-button #submitBtn [disabled]=\\\"sendForm.invalid\\\" expand=\\\"block\\\" *ngIf=\\\"isCameraOpen==false\\\">\\r\\n        <button type=\\\"submit\\\" form=\\\"sendForm\\\" class=\\\"footer\\\">\\r\\n          <ion-icon slot=\\\"start\\\" name=\\\"send\\\"></ion-icon> Send Funds\\r\\n        </button> \\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-footer>\\r\\n</ion-app>\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SendFundsPage } from './send-funds.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SendFundsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [SendFundsPage]\r\n})\r\nexport class SendFundsPageModule {}\r\n","module.exports = \"ion-card-content {\\n  background: var(--ion-card-color);\\n}\\n\\nion-card-header {\\n  --color: var(--ion-text-color,#000);\\n}\\n\\nion-toolbar {\\n  --background: var(--ion-m-background);\\n  font-family: manrope-bold;\\n  color: var(--ion-color-tertiary);\\n}\\n\\nion-toolbar ion-title {\\n  padding-top: 5%;\\n  font-size: 1.2rem;\\n  color: var(--ion-color-tertiary);\\n}\\n\\nion-toolbar ion-buttons ion-menu-button {\\n  font-size: 1rem;\\n  color: var(--ion-color-tertiary);\\n}\\n\\nion-item ion-label {\\n  white-space: normal;\\n}\\n\\nion-item.wordCountWrapper {\\n  padding: 0;\\n  margin: 0;\\n}\\n\\nion-select {\\n  display: inherit;\\n  font-family: manrope-bold;\\n  background-color: #ffffff;\\n  outline: 1px solid #91919D;\\n  font-size: 1rem;\\n  color: var(--ion-color-primary);\\n}\\n\\nion-select-option {\\n  font-family: manrope-bold;\\n}\\n\\nion-input {\\n  color: #000;\\n  line-height: 16px;\\n  background-color: #ffffff;\\n}\\n\\n#quickAmount ion-col ion-button {\\n  float: right;\\n  color: var(--ion-color-gray-two);\\n  background-color: var(--ion-color-primary);\\n  text-transform: none;\\n  font-family: manrope-bold;\\n}\\n\\n#qrIcon {\\n  z-index: 99999;\\n  cursor: pointer;\\n  right: 6%;\\n  position: absolute;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  color: var(--ion-color-primary) !important;\\n}\\n\\n.icon-head {\\n  color: #1FB4CD;\\n}\\n\\n.util-btns {\\n  padding: 3px;\\n  text-align: center;\\n  margin: 2px;\\n}\\n\\n.action-btn {\\n  height: 72px;\\n}\\n\\n.transparentBody {\\n  background: none transparent !important;\\n  --background: none transparent !important;\\n}\\n\\n.webscan-canvas {\\n  text-align: center;\\n  --background: none transparent !important;\\n}\\n\\nion-footer ion-toolbar ion-buttons ion-button {\\n  width: 100%;\\n  height: 58px;\\n  text-transform: none;\\n  font-family: manrope-bold;\\n}\\n\\nion-toolbar {\\n  --background: var(--ion-m-background);\\n}\\n\\n.input {\\n  font-family: manrope-light;\\n}\\n\\n.length {\\n  position: relative;\\n  float: right;\\n  z-index: 2000;\\n  font-family: manrope-light;\\n  color: var(--ion-color-tertiary) !important;\\n  margin-right: 5%;\\n}\\n\\nion-textarea {\\n  color: black !important;\\n  background: #ffffff;\\n  padding-left: 1%;\\n  margin-bottom: 1%;\\n}\\n\\nion-item.error {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n}\\n\\nion-item.error span {\\n  color: var(--ion-color-tertiary);\\n  display: inline-block;\\n  vertical-align: middle;\\n}\\n\\nion-note.error-message ion-icon {\\n  color: var(--ion-color-secondary);\\n  font-size: 1rem;\\n  display: inline-block;\\n  vertical-align: middle;\\n}\\n\\nion-note.error-message {\\n  display: block;\\n}\\n\\nbutton.footer {\\n  width: 100%;\\n  height: 58px;\\n  font-size: 1rem;\\n  text-align: center;\\n  text-transform: none;\\n  font-family: manrope-bold;\\n  background: transparent;\\n  color: var(--ion-color-tertiary);\\n}\\n\\nbutton.footer:hover {\\n  cursor: pointer;\\n  opacity: 0.6;\\n}\\n\\nbutton.footer ion-icon {\\n  font-size: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { BalanceService } from '../../service/balance.service';\r\nimport { Component, OnInit, NgZone, ViewChild, ElementRef } from '@angular/core';\r\nimport { QRScanner, QRScannerStatus } from '@ionic-native/qr-scanner/ngx';\r\nimport { Clipboard } from '@ionic-native/clipboard/ngx';\r\nimport { AlertController, Platform, IonInput, IonTextarea, IonButton } from '@ionic/angular';\r\nimport { MinimaApiService } from '../../service/minima-api.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport QrScanner from 'qr-scanner';\r\n\r\nimport { Token, Minima } from 'minima';\r\n\r\nexport interface SendFormObj {\r\n  tokenid?: string;\r\n  amount?: string;\r\n  address?: string;\r\n  message?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-send-funds',\r\n  templateUrl: './send-funds.page.html',\r\n  styleUrls: ['./send-funds.page.scss'],\r\n})\r\nexport class SendFundsPage implements OnInit {\r\n\r\n  @ViewChild('submitBtn', {static: false}) submitBtn: IonButton;\r\n  @ViewChild('amount', {static: false}) amountInp: IonInput;\r\n  @ViewChild('videoElem', {static: false}) videoElem: ElementRef;\r\n\r\n  sendForm: FormGroup;\r\n\r\n  max: string; // max sendable amount for quickAmount\r\n  webQrScanner: any;\r\n  compareWith: any;\r\n  itemSelected: any;\r\n  isCameraOpen = false;\r\n  isWebCameraOpen = false;\r\n  minimaToken: any;\r\n  data: SendFormObj = {tokenid: '', amount: '', address:  '', message: ''};\r\n  messageToggle = false;\r\n  balanceSubscription: Subscription;\r\n  tokenArr: Token[] = [];\r\n\r\n  private scanSub: any = null;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private qrScanner: QRScanner,\r\n    private clipboard: Clipboard,\r\n    public alertController: AlertController,\r\n    private zone: NgZone,\r\n    private api: MinimaApiService,\r\n    private balanceService: BalanceService,\r\n    private platform: Platform,\r\n    private route: ActivatedRoute,\r\n    private router: Router) {\r\n      this.pullInTokens();\r\n    }\r\n\r\n  ionViewWillEnter() {\r\n    this.isCameraOpen = false;\r\n    this.getTokenSelected();\r\n  }\r\n\r\n  ionViewWillLeave() {\r\n    this.stopCamera();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sendForm = this.formBuilder.group({\r\n      tokenid: '',\r\n      address: ['', [\r\n        Validators.required,\r\n        Validators.minLength(2),\r\n        Validators.maxLength(60),\r\n        Validators.pattern('[Mx|0x][a-zA-Z0-9]+')]],\r\n      amount: ['', [Validators.required] ],\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  get tokenFormItem() {\r\n    return this.sendForm.get('token');\r\n  }\r\n  get addressFormItem() {\r\n    return this.sendForm.get('address');\r\n  }\r\n  get amountFormItem() {\r\n    return this.sendForm.get('amount');\r\n  }\r\n  get messageFormItem() {\r\n    return this.sendForm.get('message');\r\n  }\r\n\r\n  pullInTokens() {\r\n    this.balanceService.data.subscribe((balance: Token[]) => {\r\n      this.tokenArr = balance;\r\n    });\r\n  }\r\n\r\n  sendFunds() {\r\n    this.sendForm.value.amnt = this.sendForm.value.amount.toString();\r\n    const data: SendFormObj = this.sendForm.value;\r\n    if (data.message !== null && ( data.message || data.message.length > 0) ) {\r\n      this.submitBtn.disabled = true;\r\n      this.api.createTXN(data).then((res: any) => {\r\n        if (Minima.util.checkAllResponses(res)) {\r\n          setTimeout(() => {\r\n            this.submitBtn.disabled = false;\r\n          }, 500);\r\n          this.presentAlert('Transaction Status', 'Transaction has been posted to the network!', 'Successful');\r\n          this.sendForm.reset();\r\n        } else {\r\n          setTimeout(() => {\r\n            this.submitBtn.disabled = false;\r\n          }, 500);\r\n          this.presentAlert('Transaction Status', res.message, 'Failed');\r\n        }\r\n      });\r\n    } else {\r\n      this.submitBtn.disabled = true;\r\n      this.api.sendFunds(data).then((res: any) => {\r\n        if (res.status) {\r\n          setTimeout(() => {\r\n            this.submitBtn.disabled = false;\r\n          }, 500);\r\n          this.presentAlert('Transaction Status', 'Transaction has been posted to the network!', 'Successful');\r\n          this.sendForm.reset();\r\n        } else {\r\n          setTimeout(() => {\r\n            this.submitBtn.disabled = false;\r\n          }, 500);\r\n          this.presentAlert('Transaction Status', res.message, 'Failed');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // get token selected or set Minima as default\r\n  getTokenSelected() {\r\n    this.route.queryParamMap.subscribe((res: any) => {\r\n      this.itemSelected = res.params.id;\r\n      if (!res.params.id) {\r\n        this.itemSelected = '0x00';\r\n      }\r\n    });\r\n  }\r\n\r\n  // listen to selection change\r\n  onItemSelection(ev: any) {\r\n    this.itemSelected = ev.detail.value;\r\n  }\r\n\r\n  fillAmount(type: string) {\r\n    const empty = undefined;\r\n    let param = this.route.snapshot.params['id'];\r\n    if (param === empty) {\r\n        param = '0x00';\r\n    }\r\n    this.tokenArr.forEach(element => {\r\n      if (param === element.tokenid) {\r\n        this.max = element.sendable;\r\n        if (type === 'max') {\r\n          this.amountInp.value = this.max;\r\n        } else if(type === 'half') {\r\n          this.amountInp.value = (parseFloat(this.max) / 2.0).toString();\r\n        } else if(type === 'quarter') {\r\n          this.amountInp.value = (parseFloat(this.max) / 4.0).toString();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /** ScanQR: Native */\r\n  scanQR() {\r\n    if(this.platform.is('ios') || this.platform.is('android')){\r\n      this.qrScanner.prepare()\r\n      .then((status: QRScannerStatus) => {\r\n        if (status.authorized) {\r\n          // Which class adding should I use?\r\n          this.identifyPlatformToScan_Add();\r\n\r\n          this.qrScanner.show();\r\n          this.isCameraOpen = true;\r\n\r\n          this.scanSub = this.qrScanner.scan().subscribe((text: string) => {\r\n            this.zone.run(() => {\r\n              this.data.address = text;\r\n              this.stopCamera();\r\n\r\n              this.identifyPlatformToScan_Remove();\r\n\r\n              this.isCameraOpen = false;\r\n              });\r\n\r\n          }, (err) => {\r\n            //console.log('Scanned failed', err);\r\n          });\r\n\r\n        } else if (status.denied) {\r\n          // camera permission was permanently denied\r\n          // you must use QRScanner.openSettings() method to guide the user to the settings page\r\n          // then they can grant the permission from there\r\n          this.presentAlert('Error', 'Please check camera permission', 'Camera status');\r\n        } else {\r\n          // permission was denied, but not permanently. You can ask for permission again at a later time.\r\n          this.presentAlert('Error',  'Please check camera permission', 'Camera status');\r\n\r\n        }\r\n      })\r\n      .catch((e: any) => console.log('Error is', e));\r\n    }\r\n  }\r\n\r\n  stopCamera() {\r\n    if (this.scanSub !== null) {\r\n      this.qrScanner.hide();\r\n      this.scanSub.unsubscribe();\r\n    }\r\n    this.scanSub = null;\r\n    this.identifyPlatformToScan_Remove();\r\n    this.isCameraOpen = false;\r\n    this.qrScanner.destroy();\r\n  }\r\n\r\n  async presentAlert(hdr: string, msg: string, sub: string) {\r\n   const alert = await this.alertController.create({\r\n     cssClass: 'alert',\r\n     header: hdr,\r\n     subHeader: sub,\r\n     message: msg,\r\n     buttons: ['OK']\r\n   });\r\n   await alert.present();\r\n  }\r\n\r\n  /** MISC FUNCS */\r\n  identifyPlatformToScan_Add() {\r\n    document.addEventListener('DOMContentLoaded', function(event) {\r\n      // Do work\r\n      if (this.platform.is('ios')) {\r\n        setTimeout( () => {\r\n          window.document.querySelectorAll('ion-content')\r\n            .forEach(element => {\r\n              const element1 = element.shadowRoot.querySelector('style');\r\n              element1.innerHTML = element1.innerHTML\r\n            .replace('--background:var(--ion-background-color,#fff);', '--background: transparent');\r\n          });\r\n        }, 300);\r\n      } else if (this.platform.is('android')) {\r\n        // window.document.querySelector('ion-content').classList.add('transparentBody');\r\n        setTimeout( () => {\r\n        window.document.querySelectorAll('ion-content')\r\n            .forEach(element => {\r\n              const element1 = element.shadowRoot.querySelector('style');\r\n              element1.innerHTML = element1.innerHTML\r\n            .replace('--background:var(--ion-background-color,#fff);', '--background: transparent');\r\n          });\r\n        }, 300);\r\n      }\r\n    });\r\n  }\r\n  identifyPlatformToScan_Remove() {\r\n    document.addEventListener('DOMContentLoaded', function(event) {\r\n    if (this.platform.is('ios')) {\r\n      setTimeout( () => {\r\n        window.document.querySelectorAll('ion-content')\r\n          .forEach(element => {\r\n            const element1 = element.shadowRoot.querySelector('style');\r\n            element1.innerHTML = element1.innerHTML\r\n          .replace('--background: transparent', '--background:var(--ion-background-color,#fff);');\r\n        });\r\n      }, 300);\r\n    } else if (this.platform.is('android')) {\r\n      // window.document.querySelector('ion-content').classList.remove('transparentBody');\r\n      setTimeout( () => {\r\n        window.document.querySelectorAll('ion-content')\r\n          .forEach(element => {\r\n            const element1 = element.shadowRoot.querySelector('style');\r\n            element1.innerHTML = element1.innerHTML\r\n          .replace('--background: transparent', '--background:var(--ion-background-color,#fff);');\r\n        });\r\n      }, 300);\r\n    }\r\n\r\n    });\r\n  }\r\n\r\n  useMessage() {\r\n    if (this.messageToggle) {\r\n      this.messageToggle = false;\r\n    } else {\r\n      this.messageToggle = true;\r\n    }\r\n  }\r\n\r\n  checkPlatform() {\r\n    if (this.platform.is('desktop')) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  webScanQR() {\r\n    this.isWebCameraOpen = true;\r\n    QrScanner.WORKER_PATH = 'assets/JS/qr-scanner-worker.min.js';\r\n\r\n    setTimeout(() => {\r\n      this.webQrScanner = new QrScanner(this.videoElem.nativeElement, result => {\r\n        this.data.address = result;\r\n\r\n        this.isWebCameraOpen = false;\r\n      });\r\n      this.webQrScanner.start();\r\n    }, 500);\r\n  }\r\n\r\n  stopWebScanQR() {\r\n    this.webQrScanner.destroy();\r\n    this.webQrScanner = null;\r\n    this.isWebCameraOpen = false;\r\n  }\r\n}\r\n\r\n\r\n"],"sourceRoot":""}