{"version":3,"sources":["./src/app/service/minima-api.service.ts"],"names":[],"mappings":"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","file":"pages-balance-view-tokens-view-tokens-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\nimport { Minima } from 'minima';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MinimaApiService {\n\n  private loader: any = null;\n\n  constructor(  \n    public loadingController: LoadingController\n  ) { }\n\n  async showLoader() {\n    if (this.loader == null) {\n      this.loader = await this.loadingController.create({\n        message: 'Loading'\n      });\n      this.loader.present();\n    }\n  }\n  async hideLoader() {\n    if (this.loader !== null) {\n      await this.loader.dismiss();\n      this.loader = null;\n    } else {}\n  }\n\n  createToken(data: any) {\n    return this.req(\"tokencreate name:\\\"\"+data.name+\"\\\" amount:\"+data.amount+\" description:\\\"\"+data.description+\"\\\" script:\\\"\"+data.script+\"\\\" icon:\"+data.icon+\" proof:\"+data.proof);\n  }\n\n  validateTokenID(tokenid: string){\n    return this.req(\"tokenvalidate \"+tokenid);\n  }\n\n  sendMessageTransaction(data: any){\n    //const txnidentifier = Math.floor(Math.random()*1000000000);\n    \n    const postTransaction = \"send \"+data.amount+\" \"+data.address+\" \"+data.tokenid+\" \"+\" 254:[01000100]#255:[\\\"\"+data.message+\"\\\"]\";\n    \n    // const customTXN = \n    // // Custom TXN with an ID\n    // \"txncreate \"+txnidentifier+\";\"+\n    // // Add state variable 1\n    // \"txnstate \"+txnidentifier+\" 254 01000100\"+\";\"+\n    // // Add User state variable 2\n    // \"txnstate \"+txnidentifier+\" 255 \\\"\"+data.message+\"\\\"\"+\";\"+\n    // // Auto fill the transaction\n    // \"txnauto \"+txnidentifier+\" \"+data.amount+\" \"+data.address+\" \"+data.tokenid+\";\"+\n    // // Post it!\n    // \"txnpost \"+txnidentifier+\";\"+\n    // // Clear the txn\n    // \"txndelete \"+txnidentifier+\";\";\n    // // send 1 0xFF 0x00 '254:0x1000#255:[This is a message]'\n    return this.req(postTransaction);\n  }\n\n  webLink(data: any) { \n    return this.req('weblink+' + data.url);\n  }\n\n  setHost(newHost: string) {\n    localStorage.setItem('minima_host', newHost);\n  }\n\n  newAddress() {\n    return this.req('newaddress');\n  }\n\n  sendFunds(data: any) {\n    return this.req('send ' + data.amount + ' ' + data.address + ' ' + data.tokenid);\n  }\n\n  giveMe50() {\n    return this.req('gimme50');\n  }\n\n  getBalance() {\n    return this.req('balance');\n  }\n\n  getHistory() {\n    return this.req('history');\n  }\n\n  clearMyHistory() {\n    return this.req('history clear')\n  }\n\n  getStatus() {\n    return this.req('status');\n  }\n\n  // Use minima.js instead..\n  req(fnc: any) {\n    const promise = new Promise((resolve) => {\n      Minima.cmd(fnc, (resp: any) => {\n        //console.log(resp);\n        resolve(resp);\n      });\n    });\n    return promise;\n  }\n}\n"],"sourceRoot":""}